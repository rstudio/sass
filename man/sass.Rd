% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sass.R
\name{sass}
\alias{sass}
\title{Compile Sass to CSS}
\usage{
sass(
  input = NULL,
  options = sass_options(),
  output = NULL,
  write_attachments = NA,
  cache = sass_cache_get()
)
}
\arguments{
\item{input}{Accepts raw Sass, a named list of variables, or a list of raw
Sass and/or named variables. See \code{\link{as_sass}} and
\code{\link{sass_import}} / \code{\link{sass_file}} for more details.}

\item{options}{Compiler options for Sass. Please specify options using
\code{\link{sass_options}}.}

\item{output}{Specifies path to output file for compiled CSS.}

\item{write_attachments}{If the input contains \code{\link{sass_layer}}
objects that have file attachments, and \code{output} is not \code{NULL},
then copy the file attachments to the directory of \code{output}. (Defaults
to \code{NA}, which merely emits a warning if file attachments are present,
but does not write them to disk; the side-effect of writing extra files is
subtle and potentially destructive, as files may be overwritten.)}

\item{cache}{A \link{FileCache} object created by \code{\link[=sass_file_cache]{sass_file_cache()}}, or \code{NULL}
for no caching.}
}
\value{
If \code{output = NULL}, the function returns a string value of the
compiled CSS. If the output path is specified, the compiled CSS is written
to that file and \code{invisible()} is returned.
}
\description{
Compile Sass to CSS using LibSass.
}
\details{

}
\section{Caching}{


If caching is used (as is the default), then this function checks for
changes in \code{input} and \code{options}, as well as any .sass/.scss files
specified in \code{input}, and file attachments (such as fonts) specified in
\code{input}. All of that information is hashed to create a key which is used
for caching.

For .sass/.scss files, the mtime of the specified file(s) will be checked
each time \code{sass()} is called and those times will be included in a hash; if
the mtime changes, it will result in a new hash key and the .css will be
recompiled. However, if the file imports other files (via an \verb{@import}
directive), those mtimes of those imported files will not be checked.
Changes to those files will not be detected, and the .css file will not be
recompiled. For this reason, if you are actively developing a sass theme,
then it is best to turn off caching.

For file attachments, like font files, the mtime of specified files will be
checked for changes each time \code{sass()} is called. If a directory is
specified, then all the files within the directory will have their mtime
computed and used as part of the hash. Any changes to those files will
result in a new hash key, and output directory.
}

\examples{
# raw Sass input
sass("foo { margin: 122px * .3; }")

# list of inputs, including named variables
sass(list(
  list(width = "122px"),
  "foo { margin: $width * .3; }"
))

# import a file
tmp_file <- tempfile()
writeLines("foo { margin: $width * .3; }", tmp_file)
sass(list(
  list(width = "122px"),
  sass_file(tmp_file)
))
}
\seealso{
\url{http://sass-lang.com/guide}, \code{\link[=sass_html_dependencies]{sass_html_dependencies()}}
}
